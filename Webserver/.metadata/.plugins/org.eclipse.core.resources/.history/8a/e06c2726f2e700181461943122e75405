package db.psql.connection;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class User {
	
	static String psqlUser = "server_Adrenaline";
	static String psqlPassword = "pw";

	public static int writeIntoDBgetID(String email, String pw, String typeID, String type)
			throws SQLException, ClassNotFoundException, InterruptedException, ParseException {

		String url = "jdbc:postgresql://TIMEBURNER-PC;databaseName=Adrenaline_DB";
		Class.forName("org.postgresql.Driver");

		Connection conn = DriverManager.getConnection(url, psqlUser, psqlPassword);

		String query = "INSERT INTO public.\"user\"(id_user, email, password, id_user_type, user_type) VALUES (?, ?, ?, ?, ?);";

		// possible if ID gets generated 
		//String generatedColumns[] = { "id_user" };
		String generatedColumns[] = null;
		
		PreparedStatement preparedStmt = conn.prepareStatement(query, generatedColumns);
		
		preparedStmt.setInt(1, 1);
		preparedStmt.setString(2, email);
		preparedStmt.setString(3, pw);
		preparedStmt.setInt(4, 1);
		preparedStmt.setInt(5, 1);

		java.util.Date vonDate = sdf.parse(von);
		java.sql.Date sqlVon = new Date(vonDate.getTime());
		preparedStmt.setDate(9, sqlVon);

		java.util.Date bisDate = sdf.parse(bis);
		java.sql.Date sqlBis = new Date(bisDate.getTime());
		preparedStmt.setDate(10, sqlBis);
		preparedStmt.setBoolean(11, besetzt);
		preparedStmt.setString(12, arbeiten);
		preparedStmt.setString(13, ort);
		preparedStmt.setString(14, bemerkungen);
		preparedStmt.setString(15, kurztitel);
		preparedStmt.setString(16, kontraktnummer);
		preparedStmt.setString(17, begeher);

		preparedStmt.executeUpdate();

		ResultSet rs = preparedStmt.getGeneratedKeys();
		rs.next();
		int vorgangID = (int) rs.getLong(1);

		System.out.println("...process " + vorgangID + " is registered.");
		return vorgangID;
	}
	
}
